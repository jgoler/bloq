{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jackgoler/bloq/client/screens/Signup.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { useFonts, Quicksand_700Bold, Quicksand_600SemiBold } from '@expo-google-fonts/quicksand';\nimport { Ionicons } from '@expo/vector-icons';\nimport { StackActions } from '@react-navigation/native';\nvar popAction = StackActions.pop(1);\nimport { connect } from 'react-redux';\nimport { setAlert } from \"../actions/alert\";\nimport { register } from \"../actions/auth\";\nimport PropTypes from 'prop-types';\nimport Alert from \"../components/layout/Alert\";\n\nvar Signup = function Signup(props) {\n  var _useState = useState({\n    name: '',\n    email: '',\n    password: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      formData = _useState2[0],\n      setFormData = _useState2[1];\n\n  useEffect(function () {\n    if (props.isAuthenticated) {\n      props.navigation.push('Home');\n    }\n  }, [props.isAuthenticated]);\n  var name = formData.name,\n      email = formData.email,\n      password = formData.password;\n\n  var onSubmit = function onSubmit(e) {\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n\n            if (password.length < 6) {\n              props.setAlert('Password must be at least 6 characters', 'danger');\n            } else {\n              props.register({\n                name: name,\n                email: email,\n                password: password\n              });\n            }\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useFonts = useFonts({\n    Quicksand_700Bold: Quicksand_700Bold\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 12\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, \"Loading...\"));\n  }\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.backButtonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, React.createElement(Ionicons, {\n    name: \"ios-arrow-back\",\n    size: 40,\n    color: \"black\",\n    onPress: function onPress() {\n      props.navigation.dispatch(popAction);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }))), React.createElement(View, {\n    style: styles.titleContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"))), React.createElement(Alert, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.inputText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Full Name\"), React.createElement(TextInput, {\n    style: {\n      height: 30,\n      borderColor: '#e64951',\n      borderBottomWidth: 2,\n      marginBottom: 30\n    },\n    keyboardType: \"default\",\n    autoCorrect: false,\n    name: \"name\",\n    value: name,\n    onChangeText: function onChangeText(text) {\n      return setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n        name: text\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.inputText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Email Address\"), React.createElement(TextInput, {\n    style: {\n      height: 30,\n      borderColor: '#e64951',\n      borderBottomWidth: 2,\n      marginBottom: 30\n    },\n    keyboardType: \"email-address\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    name: \"email\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n        email: text\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.inputText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Password\"), React.createElement(TextInput, {\n    style: {\n      height: 30,\n      borderColor: '#e64951',\n      borderBottomWidth: 2\n    },\n    keyboardType: \"default\",\n    autoCapitalize: \"none\",\n    secureTextEntry: true,\n    name: \"password\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n        password: text\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.loginButtonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    color: \"white\",\n    title: \"Sign Up\",\n    onPress: function onPress(e) {\n      return onSubmit(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  loginButtonContainer: {\n    width: '75%',\n    borderColor: '#e64951',\n    backgroundColor: '#e64951',\n    borderRadius: 10,\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 2,\n    marginBottom: 100\n  },\n  forgotPassword: {\n    fontFamily: 'Quicksand_700Bold',\n    color: '#e64951',\n    marginTop: 5\n  },\n  buttonContainer: {\n    borderWidth: 2,\n    borderColor: 'black'\n  },\n  inputContainer: {\n    flex: 7,\n    marginTop: '5%',\n    width: '75%'\n  },\n  inputText: {\n    fontFamily: 'Quicksand_700Bold',\n    color: 'grey',\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  title: {\n    fontFamily: 'Quicksand_700Bold',\n    fontSize: 35\n  },\n  titleContainer: {\n    flex: 1,\n    alignItems: 'flex-start'\n  },\n  backButtonContainer: {\n    marginTop: 50,\n    width: '15%',\n    alignItems: 'center'\n  },\n  header: {\n    width: '80%'\n  }\n});\nSignup.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuthenticated: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setAlert: setAlert,\n  register: register\n})(Signup);","map":{"version":3,"sources":["/Users/jackgoler/bloq/client/screens/Signup.js"],"names":["React","useState","useEffect","useFonts","Quicksand_700Bold","Quicksand_600SemiBold","Ionicons","StackActions","popAction","pop","connect","setAlert","register","PropTypes","Alert","Signup","props","name","email","password","formData","setFormData","isAuthenticated","navigation","push","onSubmit","e","preventDefault","length","fontsLoaded","Keyboard","dismiss","styles","container","header","backButtonContainer","dispatch","titleContainer","title","inputContainer","inputText","height","borderColor","borderBottomWidth","marginBottom","text","loginButtonContainer","StyleSheet","create","flex","alignItems","justifyContent","width","backgroundColor","borderRadius","borderWidth","forgotPassword","fontFamily","color","marginTop","buttonContainer","fontSize","fontWeight","propTypes","func","isRequired","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, Button, TextInput, TouchableWithoutFeedback, Keyboard } from 'react-native';\nimport { useFonts, Quicksand_700Bold, Quicksand_600SemiBold } from '@expo-google-fonts/quicksand';\nimport { Ionicons } from '@expo/vector-icons';\nimport { StackActions } from '@react-navigation/native';\nconst popAction = StackActions.pop(1);\nimport { connect } from 'react-redux';\nimport { setAlert } from '../actions/alert';\nimport { register } from '../actions/auth';\nimport PropTypes from 'prop-types';\nimport Alert from '../components/layout/Alert';\n\nconst Signup = (props) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  //const [isAuthed, setIsAuthed] = (null);\n\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    if (props.isAuthenticated) {\n      props.navigation.push('Home');\n    }\n  }, [props.isAuthenticated]);\n\n\n\n  const { name, email, password } = formData;\n\n  //const onChangeName = e => setFormData({ ...formData, name: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (password.length < 6) {\n      props.setAlert('Password must be at least 6 characters', 'danger');\n    } else {\n      props.register({ name, email, password });\n    }\n  };\n\n  let [fontsLoaded] = useFonts({\n    Quicksand_700Bold,\n  });\n\n  if (!fontsLoaded) {\n    return <View>\n      <Text>Loading...</Text>\n    </View>\n  }\n  return (\n    <TouchableWithoutFeedback onPress={() => {\n      Keyboard.dismiss();\n    }}>\n      <View style={styles.container}>\n        <View style={styles.header}>\n          <View style={styles.backButtonContainer}>\n            <Ionicons name=\"ios-arrow-back\" size={40} color=\"black\" onPress={() => {\n              props.navigation.dispatch(popAction);\n            }} />\n          </View>\n        </View>\n        <View style={styles.titleContainer}>\n          <View>\n            <Text style={styles.title}>Sign Up</Text>\n          </View>\n        </View>\n        <Alert />\n        <View style={styles.inputContainer}>\n          <Text style={styles.inputText}>Full Name</Text>\n          <TextInput\n            style={{ height: 30, borderColor: '#e64951', borderBottomWidth: 2, marginBottom: 30 }}\n            keyboardType=\"default\"\n            autoCorrect={false}\n            name='name'\n            value={name}\n            onChangeText={(text) => setFormData({ ...formData, name: text })}\n          />\n          <Text style={styles.inputText}>Email Address</Text>\n          <TextInput\n            style={{ height: 30, borderColor: '#e64951', borderBottomWidth: 2, marginBottom: 30 }}\n            keyboardType=\"email-address\"\n            autoCapitalize=\"none\"\n            autoCorrect={false}\n            name='email'\n            value={email}\n            onChangeText={(text) => setFormData({ ...formData, email: text })}\n          />\n          <Text style={styles.inputText}>Password</Text>\n          <TextInput\n            style={{ height: 30, borderColor: '#e64951', borderBottomWidth: 2 }}\n            keyboardType=\"default\"\n            autoCapitalize=\"none\"\n            secureTextEntry={true}\n            name='password'\n            value={password}\n            onChangeText={(text) => setFormData({ ...formData, password: text })}\n          />\n        </View>\n        <View style={styles.loginButtonContainer}>\n          <Button color=\"white\" title=\"Sign Up\" onPress={e => onSubmit(e)} />\n        </View>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    //backgroundColor: '#e64951'\n  },\n  loginButtonContainer: {\n    //flex: 4,\n    width: '75%',\n    borderColor: '#e64951',\n    backgroundColor: '#e64951',\n    borderRadius: 10,\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 2,\n    marginBottom: 100\n  },\n  forgotPassword: {\n    fontFamily: 'Quicksand_700Bold',\n    color: '#e64951',\n    marginTop: 5\n  },\n  buttonContainer: {\n    borderWidth: 2,\n    borderColor: 'black'\n  },\n  inputContainer: {\n    flex: 7,\n    marginTop: '5%',\n    width: '75%'\n  },\n  inputText: {\n    fontFamily: 'Quicksand_700Bold',\n    color: 'grey',\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  title: {\n    fontFamily: 'Quicksand_700Bold',\n    fontSize: 35\n  },\n  titleContainer: {\n    flex: 1,\n    alignItems: 'flex-start'\n  },\n  backButtonContainer: {\n    marginTop: 50,\n    width: '15%',\n    alignItems: 'center'\n\n  },\n  header: {\n    width: '80%'\n  },\n  /*\n  warnText: {\n    color: 'white',\n  },\n  warnTextContainer: {\n    backgroundColor: 'red',\n    width: '85%',\n    //flex: 1\n    height: 25,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 20,\n    marginTop: 10\n  }\n  */\n});\n\nSignup.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired\n  //isAuthenticated: PropTypes.bool\n};\n\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\n\nexport default connect(mapStateToProps, { setAlert, register })(Signup);\n\n/*\n<View style={styles.warnTextContainer}>\n          <Text style={styles.warnText}>Please make the password at least 6 characters</Text>\n        </View>\n        <View style={styles.warnTextContainer}>\n          <Text style={styles.warnText}>Please use a real email</Text>\n        </View>\n        */"]},"metadata":{},"sourceType":"module"}