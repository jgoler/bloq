{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jackgoler/bloq/client/components/RegularProfilePicker.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\n\nvar ProfilePicPicker = function ProfilePicPicker(props) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      pickedImage = _useState2[0],\n      setPickedImage = _useState2[1];\n\n  var verifyPermissions = function verifyPermissions() {\n    var result;\n    return _regeneratorRuntime.async(function verifyPermissions$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA, Permissions.CAMERA_ROLL));\n\n          case 2:\n            result = _context.sent;\n\n            if (!(result.status !== 'granted')) {\n              _context.next = 6;\n              break;\n            }\n\n            Alert.alert(\"Insufficient permissions!\", \"You need to grant camera and photo permissions to use this app.\", [{\n              text: 'Okay'\n            }]);\n            return _context.abrupt(\"return\", false);\n\n          case 6:\n            return _context.abrupt(\"return\", true);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var takeImageHandler = function takeImageHandler() {\n    var hasPermission, image;\n    return _regeneratorRuntime.async(function takeImageHandler$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(verifyPermissions());\n\n          case 2:\n            hasPermission = _context2.sent;\n\n            if (hasPermission) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              allowsEditing: true,\n              quality: 0.5\n            }));\n\n          case 7:\n            image = _context2.sent;\n            setPickedImage(image.uri);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var chooseImageHandler = function chooseImageHandler() {\n    var hasPermission, image;\n    return _regeneratorRuntime.async(function chooseImageHandler$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(verifyPermissions());\n\n          case 2:\n            hasPermission = _context3.sent;\n\n            if (hasPermission) {\n              _context3.next = 5;\n              break;\n            }\n\n            return _context3.abrupt(\"return\");\n\n          case 5:\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              quality: 0.5\n            }));\n\n          case 7:\n            image = _context3.sent;\n            setPickedImage(image.uri);\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.regularImagePicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.regularImagePreviewContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.imagePreview,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, !pickedImage ? React.createElement(Text, {\n    style: styles.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Click to choose image\") : React.createElement(Image, {\n    source: {\n      uri: pickedImage\n    },\n    style: styles.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  regularImagePicker: {\n    alignItems: 'center',\n    flex: 1\n  },\n  regularImagePreviewContainer: {\n    flex: 1,\n    width: '100%',\n    alignItems: 'center'\n  },\n  regularImagePreview: {\n    width: 250,\n    height: 350,\n    marginBottom: 10,\n    borderColor: 'black',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 2\n  },\n  regularImage: {\n    width: 246,\n    height: 346\n  },\n  buttonContainer: {\n    width: '75%',\n    borderColor: '#e64951',\n    backgroundColor: '#e64951',\n    borderRadius: 10,\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 2,\n    marginBottom: 30\n  }\n});\nexport default ProfilePicPicker;","map":{"version":3,"sources":["/Users/jackgoler/bloq/client/components/RegularProfilePicker.js"],"names":["React","useState","ImagePicker","Permissions","ProfilePicPicker","props","pickedImage","setPickedImage","verifyPermissions","askAsync","CAMERA","CAMERA_ROLL","result","status","Alert","alert","text","takeImageHandler","hasPermission","launchCameraAsync","allowsEditing","quality","image","uri","chooseImageHandler","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","styles","regularImagePicker","regularImagePreviewContainer","imagePreview","description","StyleSheet","create","alignItems","flex","width","regularImagePreview","height","marginBottom","borderColor","justifyContent","borderWidth","regularImage","buttonContainer","backgroundColor","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, Button, Text, Image, StyleSheet, Alert } from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\n\nconst ProfilePicPicker = props => {\n  const [pickedImage, setPickedImage] = useState();\n\n  const verifyPermissions = async () => {\n    const result = await Permissions.askAsync(Permissions.CAMERA, Permissions.CAMERA_ROLL\n    );\n    if (result.status !== 'granted') {\n      Alert.alert(\"Insufficient permissions!\", \"You need to grant camera and photo permissions to use this app.\",\n        [{ text: 'Okay' }]\n      );\n      return false;\n    }\n    return true;\n  };\n\n  const takeImageHandler = async () => {\n    const hasPermission = await verifyPermissions();\n    if (!hasPermission) {\n      return;\n    }\n    const image = await ImagePicker.launchCameraAsync({\n      allowsEditing: true,\n      quality: 0.5\n    });\n    setPickedImage(image.uri);\n  };\n\n  const chooseImageHandler = async () => {\n    const hasPermission = await verifyPermissions();\n    if (!hasPermission) {\n      return;\n    }\n    const image = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      quality: 0.5\n    });\n    setPickedImage(image.uri);\n  }\n\n  return (\n    <View style={styles.regularImagePicker}>\n      <View style={styles.regularImagePreviewContainer}>\n        <View style={styles.imagePreview}>\n          {!pickedImage ? (\n            <Text style={styles.description}>Click to choose image</Text>\n          ) : (\n              <Image source={{ uri: pickedImage }} style={styles.image} />\n            )}\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  regularImagePicker: {\n    alignItems: 'center',\n    flex: 1,\n  },\n  regularImagePreviewContainer: {\n    flex: 1,\n    width: '100%',\n    alignItems: 'center'\n  },\n  regularImagePreview: {\n    width: 250,\n    height: 350,\n    //borderRadius: 47,\n    marginBottom: 10,\n    borderColor: 'black',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 2,\n  },\n  regularImage: {\n    width: 246,\n    height: 346,\n    //borderRadius: 45\n  },\n  buttonContainer: {\n    width: '75%',\n    borderColor: '#e64951',\n    backgroundColor: '#e64951',\n    borderRadius: 10,\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 2,\n    marginBottom: 30\n  },\n});\n\nexport default ProfilePicPicker;"]},"metadata":{},"sourceType":"module"}